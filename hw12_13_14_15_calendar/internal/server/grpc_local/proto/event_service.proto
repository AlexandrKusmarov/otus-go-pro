syntax = "proto3";

package event;

option go_package = "./;pb";
import "google/protobuf/timestamp.proto";

message Event {
  int64 id = 1;
  string title = 2;
  google.protobuf.Timestamp event_date_time = 3;
  google.protobuf.Timestamp event_end_date_time = 4;
  string description = 5;
  int64 user_id = 6;
  google.protobuf.Timestamp notify_before_event = 7;
}

message CreateEventRequest {
  Event event = 1;
}

message CreateEventResponse {
  Event event = 1;
}

message GetEventRequest {
  int64 id = 1;
}

message GetEventResponse {
  Event event = 1;
}

message UpdateEventRequest {
  Event event = 1;
}

message UpdateEventResponse {
  Event event = 1;
}

message DeleteEventRequest {
  int64 id = 1;
}

message DeleteEventResponse {}

message GetAllEventsRequest {}

message GetAllEventsResponse {
  repeated Event events = 1;
}

// Новые сообщения для получения событий за день, неделю и месяц
message GetAllEventsForDayRequest {
  google.protobuf.Timestamp day = 1; // Дата для получения событий за день
}

message GetAllEventsForDayResponse {
  repeated Event events = 1; // Список событий за день
}

message GetAllEventsForWeekRequest {
  google.protobuf.Timestamp start = 1; // Начало недели
}

message GetAllEventsForWeekResponse {
  repeated Event events = 1; // Список событий за неделю
}

message GetAllEventsForMonthRequest {
  google.protobuf.Timestamp start = 1; // Начало месяца
}

message GetAllEventsForMonthResponse {
  repeated Event events = 1; // Список событий за месяц
}

service EventService {
  rpc CreateEvent(CreateEventRequest) returns (CreateEventResponse);
  rpc GetEvent(GetEventRequest) returns (GetEventResponse);
  rpc UpdateEvent(UpdateEventRequest) returns (UpdateEventResponse);
  rpc DeleteEvent(DeleteEventRequest) returns (DeleteEventResponse);
  rpc GetAllEvents(GetAllEventsRequest) returns (GetAllEventsResponse);
  rpc GetAllEventsForDay(GetAllEventsForDayRequest) returns (GetAllEventsForDayResponse);
  rpc GetAllEventsForWeek(GetAllEventsForWeekRequest) returns (GetAllEventsForWeekResponse);
  rpc GetAllEventsForMonth(GetAllEventsForMonthRequest) returns (GetAllEventsForMonthResponse);
}