services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: calendar_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - db
  kafka:
    image: bitnami/kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - kafka
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
  calendar:
    container_name: calendar-app
    image: calendar-app2
    build:
      context: .
      dockerfile: build/calendar/Dockerfile
    depends_on:
      - postgres
    restart: on-failure
    ports:
      - "8888:8081"
      - "50051:50051"
    expose:
      - 50051
      - 8888
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: calendar_db
      CONFIG_MIGRATION: /etc/migrations
#      HTTP_HOST: "0.0.0.0"
#      HTTP_PORT: 8080
#      GRPC_HOST: "0.0.0.0"
#      GRPC_PORT: 50051
    networks:
      - db
  calendar_scheduler:
    container_name: calendar-scheduler
    image: calendar-scheduler
    build:
      context: .
      dockerfile: build/calendar_scheduler/Dockerfile
    depends_on:
      - postgres
      - kafka
    restart: on-failure
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: calendar_db
#      RMQ_URI: "amqp://guest:guest@rabbit:5672/"
    networks:
      - db
      - kafka
  calendar_sender:
    container_name: calendar-sender
    image: calendar-sender
    build:
      context: .
      dockerfile: build/calendar_sender/Dockerfile
    depends_on:
      - kafka
      - postgres
    restart: on-failure
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: calendar_db
#      RMQ_URI: "amqp://guest:guest@rabbit:5672/"
    networks:
      - db
      - kafka

volumes:
  kafka_data:
    driver: local
  postgres_data:
    driver: local

networks:
  kafka:
    driver: bridge
  db:
    driver: bridge